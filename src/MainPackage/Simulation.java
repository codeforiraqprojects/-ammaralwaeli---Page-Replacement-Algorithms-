/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainPackage;

import java.awt.Font;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fatima Adel
 */
public class Simulation extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    DefaultTableModel MainMemory, VirtualMemory;
    int mainCounter, c;
    ArrayList<String> refList;
    boolean hit, isc;
    FIFO fifo;
    LRU lru;
    SecondChance sc;
    int algorithm;

    public Simulation() {
        initComponents();
    }

    public Simulation(int algorithm) {
        initComponents();
        mainCounter = 0;
        isc = true;
        hit = false;
        c = 0;
        this.algorithm = algorithm;
        refList = new ArrayList<>();
        MainMemory = new DefaultTableModel();
        MMTable.setModel(MainMemory);
        MainMemory.addColumn("Index");
        MainMemory.addColumn("Num of Page");
        VirtualMemory = new DefaultTableModel();
        VMTable.setModel(VirtualMemory);
        if (this.algorithm == 3) {
            MainMemory.addColumn("Reference Bit");
        }
        if (this.algorithm == 2) {
            MainMemory.addColumn("Count");
        }
        VirtualMemory.addColumn("Index");
        VirtualMemory.addColumn("Num of Page");
        VMTable.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 18));
        MMTable.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 18));
        for (int i = 0; i < 16; i++) {
            VirtualMemory.addRow(new Object[]{i + "", ""});
        }
        Refrences.setText("Refrences List : ");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VMlbl = new javax.swing.JLabel();
        MMlbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        VMTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        MMTable = new javax.swing.JTable();
        Pagetxt = new javax.swing.JTextField();
        Msglbl = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Errorlbl = new javax.swing.JLabel();
        State = new javax.swing.JLabel();
        Refrences = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        PF = new javax.swing.JLabel();
        PH = new javax.swing.JLabel();
        Headerlbl = new javax.swing.JLabel();
        pin = new javax.swing.JLabel();
        pout = new javax.swing.JLabel();

        setResizable(false);

        VMlbl.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        VMlbl.setText("Virtual Memory");

        MMlbl.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        MMlbl.setText("Main Memory");

        VMTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        VMTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        VMTable.setRowHeight(20);
        VMTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VMTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(VMTable);

        MMTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        MMTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        MMTable.setRowHeight(20);
        jScrollPane2.setViewportView(MMTable);

        Pagetxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        Msglbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Msglbl.setText("Please, Enter the page:");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Enter");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        Errorlbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Errorlbl.setForeground(new java.awt.Color(255, 0, 0));
        Errorlbl.setToolTipText("");

        State.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        State.setText("State:  ");

        Refrences.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Refrences.setText("References List : ");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jButton3.setText("Clear");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        PF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PF.setText("PF:");

        PH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PH.setText("PH:");

        Headerlbl.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        Headerlbl.setForeground(new java.awt.Color(0, 0, 255));
        Headerlbl.setText("Page Replacement Algorithm");

        pin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pin.setText("Page in :");

        pout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pout.setText("Page out :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Errorlbl))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Refrences))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(Headerlbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(VMlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(305, 305, 305)
                                .addComponent(MMlbl))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(225, 225, 225)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(256, 256, 256)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PF)
                                    .addComponent(PH)
                                    .addComponent(State)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Msglbl)
                                    .addComponent(Pagetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pin)
                                    .addComponent(pout))))))
                .addGap(484, 484, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(Headerlbl)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MMlbl)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(47, 47, 47)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(PF)
                                        .addGap(7, 7, 7)
                                        .addComponent(PH)
                                        .addGap(7, 7, 7)
                                        .addComponent(State)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pin)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pout)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Msglbl)
                                        .addGap(7, 7, 7)
                                        .addComponent(Pagetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(VMlbl)))
                .addGap(95, 95, 95)
                .addComponent(Refrences)
                .addGap(36, 36, 36)
                .addComponent(Errorlbl)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (!Pagetxt.getText().equals("")) {
            if (!containsChar(Pagetxt.getText())) {
                if ((Integer.parseInt(Pagetxt.getText()) >= 0 && Integer.parseInt(Pagetxt.getText()) <= 15)) {
                    switch (this.algorithm) {
                        case 1:
                            Errorlbl.setText("");
                            fifoAlgorithm(Pagetxt.getText());
                            break;
                        case 2:
                            Errorlbl.setText("");
                            lruAlgorithm(Pagetxt.getText());
                            break;
                        case 3:
                            Errorlbl.setText("");
                            SecondChanceAlgorithm(Pagetxt.getText());
                            break;
                    }
                } else {
                    Errorlbl.setText("Please, Enter the right page !");
                }
            } else {
                Errorlbl.setText("Please, The number of page should not contain character !");
            }
        } else {
            Errorlbl.setText("Please, Enter the number of page !");
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void VMTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VMTableMouseClicked
        switch (this.algorithm) {
            case 1:
                Errorlbl.setText("");
                fifoAlgorithm(VMTable.getValueAt(VMTable.getSelectedRow(), 0).toString());
                break;
            case 2:
                Errorlbl.setText("");
                lruAlgorithm(VMTable.getValueAt(VMTable.getSelectedRow(), 0).toString());
                break;
            case 3:
                Errorlbl.setText("");
                SecondChanceAlgorithm(VMTable.getValueAt(VMTable.getSelectedRow(), 0).toString());
                break;
        }
    }//GEN-LAST:event_VMTableMouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        newMain();
    }//GEN-LAST:event_jButton3MouseClicked

    private void newMain() {
        refList.clear();
        MainMemory = new DefaultTableModel();
        MMTable.setModel(MainMemory);
        MainMemory.addColumn("Index");
        MainMemory.addColumn("Num of Page");
        if (this.algorithm == 3) {
            MainMemory.addColumn("Reference Bit");
        }
        if (this.algorithm == 2) {
            MainMemory.addColumn("Count");
        }
        for (int i = 0; i < VirtualMemory.getRowCount(); i++) {
            VirtualMemory.setValueAt("", i, 1);
        }
        Pagetxt.setText("");
        PF.setText("PF: ");
        PH.setText("PH: ");
        State.setText("State: ");
        Refrences.setText("Refrences List : ");
    }

    private boolean containsChar(String page) {
        boolean flag = false;
        for (char cha : page.toCharArray()) {
            if (!(cha >= 48 && cha <= 57)) {
                flag = true;
                break;
            }
        }
        return flag;
    }

    private void fifoAlgorithm(String page) {
        isc = true;
        fifo = new FIFO(VirtualMemory, MainMemory, refList, this.hit);
        fifo.fifoProcess(page);
        refList.clear();
        refList.addAll(fifo.refrencesList);
        State.setText("State: " + fifo.pageState);
        Refrences.setText("Refrences List : ");
        PF.setText("PF: " + fifo.pfi);
        PH.setText("PH: " + fifo.phi);
        for (int i = 0; i < refList.size(); i++) {
            Refrences.setText(Refrences.getText() + refList.get(i) + ",");
        }
        pin.setText("Page in : " + fifo.in);
        pout.setText("Page out : " + fifo.out);
    }

    private void lruAlgorithm(String page) {
        isc = true;
        lru = new LRU(VirtualMemory, MainMemory, refList, this.hit);
        lru.lruProcess(page);
        refList.clear();
        refList.addAll(lru.refrencesList);
        State.setText("State: " + lru.pageState);
        Refrences.setText("Refrences List : ");
        PF.setText("PF: " + lru.pfi);
        PH.setText("PH: " + lru.phi);
        for (int i = 0; i < refList.size(); i++) {
            Refrences.setText(Refrences.getText() + refList.get(i) + ",");
        }
        pin.setText("Page in : " + lru.in);
        pout.setText("Page out : " + lru.out);
    }

    private void SecondChanceAlgorithm(String page) {
        isc = true;
        sc = new SecondChance(VirtualMemory, MainMemory, refList, this.hit);
        sc.fifoProcess(page);
        refList.clear();
        refList.addAll(sc.refrencesList);
        State.setText("State: " + sc.pageState);
        PF.setText("PF: " + sc.pfi);
        PH.setText("PH: " + sc.phi);
        Refrences.setText("Refrences List : ");
        for (int i = 0; i < refList.size(); i++) {
            Refrences.setText(Refrences.getText() + refList.get(i) + ",");
        }
        pin.setText("Page in : " + sc.in);
        pout.setText("Page out : " + sc.out);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Simulation().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Errorlbl;
    private javax.swing.JLabel Headerlbl;
    private javax.swing.JTable MMTable;
    private javax.swing.JLabel MMlbl;
    private javax.swing.JLabel Msglbl;
    private javax.swing.JLabel PF;
    private javax.swing.JLabel PH;
    private javax.swing.JTextField Pagetxt;
    private javax.swing.JLabel Refrences;
    private javax.swing.JLabel State;
    private javax.swing.JTable VMTable;
    private javax.swing.JLabel VMlbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel pin;
    private javax.swing.JLabel pout;
    // End of variables declaration//GEN-END:variables
}
